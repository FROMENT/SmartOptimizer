#!/bin/bash
# Cloud Optimization Workflow - Optimisation compl√®te de tous les services cloud

echo "‚òÅÔ∏è  OPTIMISATION COMPL√àTE DES SERVICES CLOUD"
echo "============================================"

HOME_DIR="$HOME"
SMARTOPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# 1. D√©tection de tous les services cloud
echo "üîç √âtape 1: D√©tection des services cloud..."
python3 "$SMARTOPT_DIR/src/analyzers/cloud_services_detector.py" "$HOME_DIR"

if [ $? -ne 0 ]; then
    echo "‚ùå Erreur lors de la d√©tection des services cloud"
    exit 1
fi

echo ""

# 2. V√©rification s√©curit√© cloud obligatoire
echo "üîí √âtape 2: V√©rification s√©curit√© cloud (OBLIGATOIRE)..."
"$SMARTOPT_DIR/scripts/quick_cloud_safety_check.sh"

if [ $? -ne 0 ]; then
    echo "‚ùå V√©rification s√©curit√© √©chou√©e - ARR√äT"
    echo "   Attendez la fin des synchronisations avant d'optimiser"
    exit 1
fi

echo "‚úÖ S√©curit√© cloud valid√©e - Optimisation peut proc√©der"
echo ""

# 3. Optimisation par service cloud d√©tect√©
echo "‚ö° √âtape 3: Optimisation des services cloud d√©tect√©s..."

# iCloud Drive
ICLOUD_PATH="$HOME_DIR/Library/Mobile Documents/com~apple~CloudDocs"
if [ -d "$ICLOUD_PATH" ]; then
    echo ""
    echo "üçé Optimisation iCloud Drive..."
    read -p "Optimiser iCloud Drive? (Y/n): " optimize_icloud
    if [[ ! $optimize_icloud =~ ^[Nn]$ ]]; then
        python3 "$SMARTOPT_DIR/src/optimizers/cloud_optimizer.py" "$ICLOUD_PATH"
    fi
fi

# Google Drive (d√©tecter dynamiquement)
GOOGLE_DRIVE_PATHS=(
    "$HOME_DIR/Library/CloudStorage/GoogleDrive-"*
    "$HOME_DIR/Google Drive"
    "$HOME_DIR/GoogleDrive"
)

for gdrive_pattern in "${GOOGLE_DRIVE_PATHS[@]}"; do
    for gdrive_path in $gdrive_pattern; do
        if [ -d "$gdrive_path" ]; then
            echo ""
            echo "üìä Optimisation Google Drive..."
            echo "   Chemin: $gdrive_path"
            read -p "Optimiser ce Google Drive? (Y/n): " optimize_gdrive
            if [[ ! $optimize_gdrive =~ ^[Nn]$ ]]; then
                python3 "$SMARTOPT_DIR/src/optimizers/cloud_optimizer.py" "$gdrive_path"
            fi
            break
        fi
    done
done

# OneDrive (d√©tecter dynamiquement)
ONEDRIVE_PATHS=(
    "$HOME_DIR/Library/CloudStorage/OneDrive-"*
    "$HOME_DIR/OneDrive"*
)

for onedrive_pattern in "${ONEDRIVE_PATHS[@]}"; do
    for onedrive_path in $onedrive_pattern; do
        if [ -d "$onedrive_path" ]; then
            echo ""
            echo "üíº Optimisation OneDrive..."
            echo "   Chemin: $onedrive_path"
            read -p "Optimiser ce OneDrive? (Y/n): " optimize_onedrive
            if [[ ! $optimize_onedrive =~ ^[Nn]$ ]]; then
                python3 "$SMARTOPT_DIR/src/optimizers/cloud_optimizer.py" "$onedrive_path"
            fi
            break
        fi
    done
done

# Dropbox
DROPBOX_PATHS=(
    "$HOME_DIR/Dropbox"
    "$HOME_DIR/Dropbox (Personal)"
    "$HOME_DIR/Dropbox (Business)"
)

for dropbox_path in "${DROPBOX_PATHS[@]}"; do
    if [ -d "$dropbox_path" ]; then
        echo ""
        echo "üì¶ Optimisation Dropbox..."
        echo "   Chemin: $dropbox_path"
        read -p "Optimiser ce Dropbox? (Y/n): " optimize_dropbox
        if [[ ! $optimize_dropbox =~ ^[Nn]$ ]]; then
            python3 "$SMARTOPT_DIR/src/optimizers/cloud_optimizer.py" "$dropbox_path"
        fi
        break
    fi
done

# Box
BOX_PATHS=(
    "$HOME_DIR/Box"
    "$HOME_DIR/Box Sync"
)

for box_path in "${BOX_PATHS[@]}"; do
    if [ -d "$box_path" ]; then
        echo ""
        echo "üìã Optimisation Box..."
        echo "   Chemin: $box_path"
        read -p "Optimiser ce Box? (Y/n): " optimize_box
        if [[ ! $optimize_box =~ ^[Nn]$ ]]; then
            python3 "$SMARTOPT_DIR/src/optimizers/cloud_optimizer.py" "$box_path"
        fi
        break
    fi
done

# 4. Optimisation globale des doublons inter-cloud
echo ""
echo "üîÑ √âtape 4: D√©tection de doublons entre services cloud..."
read -p "Rechercher les doublons entre tous les services cloud? (Y/n): " find_cross_duplicates
if [[ ! $find_cross_duplicates =~ ^[Nn]$ ]]; then
    echo "   üîç Analyse des doublons inter-cloud en cours..."
    
    # Cr√©er une liste de tous les chemins cloud
    CLOUD_PATHS_FILE="/tmp/smartopt_cloud_paths.txt"
    > "$CLOUD_PATHS_FILE"
    
    # Ajouter tous les chemins cloud d√©tect√©s
    for cloud_path in "$ICLOUD_PATH" $GOOGLE_DRIVE_PATHS $ONEDRIVE_PATHS "${DROPBOX_PATHS[@]}" "${BOX_PATHS[@]}"; do
        if [ -d "$cloud_path" ]; then
            echo "$cloud_path" >> "$CLOUD_PATHS_FILE"
        fi
    done
    
    # Ex√©cuter la d√©tection de doublons multi-r√©pertoires
    if [ -s "$CLOUD_PATHS_FILE" ]; then
        echo "   üìä Comparaison entre $(wc -l < "$CLOUD_PATHS_FILE") services cloud..."
        python3 "$SMARTOPT_DIR/src/optimizers/quick_smart_optimizer.py" --multi-directory "$CLOUD_PATHS_FILE"
    fi
    
    rm -f "$CLOUD_PATHS_FILE"
fi

# 5. V√©rification finale et recommandations
echo ""
echo "üéØ √âtape 5: V√©rification finale et recommandations..."

# Recalculer l'utilisation apr√®s optimisation
echo "üìä Recalcul de l'utilisation des services cloud..."
python3 "$SMARTOPT_DIR/src/analyzers/cloud_services_detector.py" "$HOME_DIR"

# Recommandations sp√©cifiques par service
echo ""
echo "üí° RECOMMANDATIONS POST-OPTIMISATION:"
echo "====================================="

echo ""
echo "üçé iCloud Drive:"
echo "   ‚Ä¢ Activez 'Optimiser le stockage Mac' dans Pr√©f√©rences Syst√®me > Apple ID"
echo "   ‚Ä¢ Utilisez iCloud Photos pour optimiser l'espace photo"
echo "   ‚Ä¢ D√©placez les gros fichiers vers 'Stock√© dans iCloud uniquement'"

echo ""
echo "üìä Google Drive:"
echo "   ‚Ä¢ Passez en mode 'Streaming' au lieu de 'Miroir' dans l'app Google Drive"
echo "   ‚Ä¢ Convertissez les documents Office en Google Docs/Sheets pour √©conomiser l'espace"
echo "   ‚Ä¢ Utilisez Google Photos pour les images (stockage s√©par√©)"

echo ""
echo "üíº OneDrive:"
echo "   ‚Ä¢ Activez 'Fichiers √† la demande' dans les param√®tres OneDrive"
echo "   ‚Ä¢ Utilisez OneDrive Personal Vault pour les documents sensibles"
echo "   ‚Ä¢ Synchronisez seulement les dossiers n√©cessaires"

echo ""
echo "üì¶ Dropbox:"
echo "   ‚Ä¢ Activez 'Smart Sync' pour les dossiers volumineux"
echo "   ‚Ä¢ Utilisez Dropbox Paper au lieu de fichiers Word/PDF quand possible"
echo "   ‚Ä¢ Archivez les anciens projets avec Dropbox Archive"

# 6. Configuration de la surveillance continue
echo ""
echo "‚öôÔ∏è  √âtape 6: Configuration de la surveillance (optionnel)..."
read -p "Configurer une surveillance mensuelle automatique? (y/N): " setup_monitoring
if [[ $setup_monitoring =~ ^[Yy]$ ]]; then
    
    # Cr√©er un script de surveillance
    MONITORING_SCRIPT="$HOME_DIR/.smartoptimizer_cloud_monitor.sh"
    
    cat > "$MONITORING_SCRIPT" << 'EOF'
#!/bin/bash
# SmartOptimizer Cloud Monitoring - Surveillance automatique
SMARTOPT_DIR="$(dirname "$(realpath "$0")")/SmartOptimizer"

echo "ü§ñ SmartOptimizer - Surveillance automatique cloud"
echo "=================================================="
echo "Date: $(date)"

# V√©rifier la s√©curit√© cloud
"$SMARTOPT_DIR/scripts/quick_cloud_safety_check.sh" > /dev/null 2>&1

if [ $? -eq 0 ]; then
    echo "‚úÖ Services cloud stables"
    
    # Analyser les changements
    echo "üìä Analyse des changements depuis la derni√®re v√©rification..."
    python3 "$SMARTOPT_DIR/src/analyzers/cloud_services_detector.py" "$HOME" > "/tmp/smartopt_cloud_report_$(date +%Y%m%d).txt"
    
    echo "üìÑ Rapport sauvegard√©: /tmp/smartopt_cloud_report_$(date +%Y%m%d).txt"
else
    echo "‚ö†Ô∏è  Synchronisations cloud actives - Surveillance report√©e"
fi

echo "Prochaine v√©rification: $(date -d '+1 month')"
EOF

    chmod +x "$MONITORING_SCRIPT"
    
    echo "   üìÖ Script de surveillance cr√©√©: $MONITORING_SCRIPT"
    echo "   ‚è∞ Pour automatiser: ajouter √† crontab avec 'crontab -e':"
    echo "      0 9 1 * * $MONITORING_SCRIPT"
fi

# 7. R√©sum√© final
echo ""
echo "‚úÖ OPTIMISATION CLOUD TERMIN√âE"
echo "=============================="
echo "üìä Actions effectu√©es:"
echo "   ‚Ä¢ D√©tection de tous les services cloud"
echo "   ‚Ä¢ V√©rification s√©curit√© obligatoire"
echo "   ‚Ä¢ Optimisation sp√©cifique par service"
echo "   ‚Ä¢ D√©tection de doublons inter-cloud"
echo "   ‚Ä¢ Recommandations personnalis√©es"

echo ""
echo "üíæ Sauvegardes dans:"
echo "   ~/SmartOptimizer_Backups/cloud_optimization/"

echo ""
echo "üì± Prochaines √©tapes recommand√©es:"
echo "   1. V√©rifiez les optimisations sur vos autres appareils"
echo "   2. Configurez les param√®tres cloud selon les recommandations"
echo "   3. Surveillez l'espace lib√©r√© dans les prochains jours"
echo "   4. R√©ex√©cutez ce script mensuel pour maintenance"

echo ""
echo "üéâ Vos services cloud sont maintenant optimis√©s!"